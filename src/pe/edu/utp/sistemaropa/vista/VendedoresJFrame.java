package pe.edu.utp.sistemaropa.vista;

import java.awt.Graphics;
import java.awt.Image;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import pe.edu.utp.sistemaropa.DaoImpl.VendedorDaoImpl;
import pe.edu.utp.sistemaropa.config.Conexion;
import pe.edu.utp.sistemaropa.dto.Vendedor;

/**
 *
 * @author Nayely
 */
public class VendedoresJFrame extends javax.swing.JFrame {

    Vendedor v = new Vendedor();
    VendedorDaoImpl vende = new VendedorDaoImpl();
    DefaultTableModel modelo = new DefaultTableModel();

    private PreparedStatement ps;
    private ResultSet rs;
    private Connection conex;

    /**
     * Creates new form AdminJFrame
     */
    FondoPanel fondo = new FondoPanel();
    public VendedoresJFrame() {
        this.setContentPane(fondo);
        initComponents();
        ListarVendedor();
        this.cbxIdUsuario.setModel(Obt_IdUsuario());
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnSalirAdmin = new javax.swing.JButton();
        btnEliminarAdmin = new javax.swing.JButton();
        btnEditarAdmin = new javax.swing.JButton();
        btnGuardarAdmin = new javax.swing.JButton();
        btnNuevoAdmin = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreVendedor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoVendedor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTeléfonoVendedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDniVendedor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVendedor = new javax.swing.JTable();
        btnListarDisponible = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cbxIdUsuario = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setOpaque(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setToolTipText("Botones");
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setOpaque(false);

        btnSalirAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/sistemaropa/img/regresar.png"))); // NOI18N
        btnSalirAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirAdminActionPerformed(evt);
            }
        });

        btnEliminarAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/sistemaropa/img/exit.png"))); // NOI18N
        btnEliminarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAdminActionPerformed(evt);
            }
        });

        btnEditarAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/sistemaropa/img/refresh_.png"))); // NOI18N
        btnEditarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarAdminActionPerformed(evt);
            }
        });

        btnGuardarAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/sistemaropa/img/Guard.png"))); // NOI18N
        btnGuardarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarAdminActionPerformed(evt);
            }
        });

        btnNuevoAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/sistemaropa/img/añadir1.png"))); // NOI18N
        btnNuevoAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEditarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevoAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminarAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalirAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoAdmin)
                    .addComponent(btnEliminarAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarAdmin)
                    .addComponent(btnSalirAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditarAdmin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Ink Free", 1, 48)); // NOI18N
        jLabel6.setText("Vendedores");

        jLabel2.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel2.setText("NOMBRE");

        txtNombreVendedor.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N
        txtNombreVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreVendedorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel3.setText("APELLIDO");

        txtApellidoVendedor.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N
        txtApellidoVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoVendedorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel4.setText("TELÉFONO");

        txtTeléfonoVendedor.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel5.setText("DNI");

        txtDniVendedor.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel7.setText("IDENTIFICADOR DE USUARIO");

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        tblVendedor.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N
        tblVendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblVendedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVendedorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblVendedor);

        btnListarDisponible.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N
        btnListarDisponible.setText("Disponiblidad");
        btnListarDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDisponibleActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N
        jLabel8.setText("¿Deseas ver disponibilidad?");

        cbxIdUsuario.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 12)); // NOI18N
        cbxIdUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxIdUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxIdUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(jLabel8)))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreVendedor)
                            .addComponent(txtApellidoVendedor)
                            .addComponent(txtTeléfonoVendedor)
                            .addComponent(txtDniVendedor)
                            .addComponent(cbxIdUsuario, 0, 250, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnListarDisponible)
                        .addGap(68, 68, 68))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtApellidoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTeléfonoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDniVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(cbxIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(btnListarDisponible)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAdminActionPerformed
        EliminarVendedor();
    }//GEN-LAST:event_btnEliminarAdminActionPerformed

    private void btnEditarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarAdminActionPerformed
        try {
            ActualizarVendedor();
        } catch (SQLException ex) {
            Logger.getLogger(VendedoresJFrame.class.getName()).log(Level.SEVERE, null, ex);

        }

    }//GEN-LAST:event_btnEditarAdminActionPerformed

    private void btnGuardarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarAdminActionPerformed
        try {
            crearUsuario();
        } catch (SQLException ex) {
            Logger.getLogger(VendedoresJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarAdminActionPerformed

    private void btnNuevoAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoAdminActionPerformed
        LimpiarVendedor();
    }//GEN-LAST:event_btnNuevoAdminActionPerformed

    private void txtNombreVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreVendedorActionPerformed

    private void txtApellidoVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoVendedorActionPerformed

    private void btnListarDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDisponibleActionPerformed
        DisponibilidadJFrame a = new DisponibilidadJFrame();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnListarDisponibleActionPerformed

    private void btnSalirAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirAdminActionPerformed
        MenuAdministradorJFrame a = new MenuAdministradorJFrame();

        int confirm = JOptionPane.showConfirmDialog(a, "¿Desea salir?", "Confirmación de Salida", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            a.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnSalirAdminActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked

    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void tblVendedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVendedorMouseClicked
        ObtenerDatosTabla();
    }//GEN-LAST:event_tblVendedorMouseClicked

    private void cbxIdUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxIdUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxIdUsuarioActionPerformed
    void crearUsuario() throws SQLException {
        String nom = txtNombreVendedor.getText();
        String apell = txtApellidoVendedor.getText();
        String tel = txtTeléfonoVendedor.getText();
        String dni = txtDniVendedor.getText();
        String idUser = cbxIdUsuario.getSelectedItem().toString();

        if (nom.isEmpty() || apell.isEmpty() || tel.isEmpty() || dni.isEmpty() || idUser.isEmpty()) {
            JOptionPane.showMessageDialog(null, "TODOS LOS CAMPOS SON REQUERIDOS");
        } else {

            if (esIdUsuarioDisponible(idUser) && verificarIDUsuario(idUser) && !idUser.equals("Seleccionar")) {
                JOptionPane.showMessageDialog(null, "El ID DE USUARIO ES VÁLIDO");
                int telefono = Integer.parseInt(tel);
                int d = Integer.parseInt(dni);
                int id = Integer.parseInt(idUser);

                v.setNombre(nom);
                v.setApellido(apell);
                v.setTelefono(telefono);
                v.setDNI(d);
                v.setIdUsuario(id);

                vende.create(v);
                LimpiarTabla();
                ListarVendedor();
                LimpiarVendedor();
                this.cbxIdUsuario.setModel(Obt_IdUsuario());
                JOptionPane.showMessageDialog(null, "VENDEDOR REGISTRADO");
            } else {
                JOptionPane.showMessageDialog(null, "El ID DE USUARIO NO DISPONIBLE");
            }

        }

    }

    public boolean esIdUsuarioDisponible(String idUsuarioTexto) throws SQLException {
        String SQL = "SELECT u.IdUsuario "
                + "FROM Usuario u "
                + "LEFT JOIN Vendedor v ON u.IdUsuario = v.IdUsuario "
                + "LEFT JOIN Administrador a ON u.IdUsuario = a.IdUsuario "
                + "WHERE v.IdUsuario IS NULL AND a.IdUsuario IS NULL AND u.IdUsuario = ?";

        try {
            int idUsuario = Integer.parseInt(idUsuarioTexto);

            conex = Conexion.getConexion();
            ps = conex.prepareStatement(SQL);
            ps.setInt(1, idUsuario);
            rs = ps.executeQuery();

            if (rs.next()) {
                return true;
            }
        } catch (NumberFormatException e) {
            System.out.println("Error: ID de usuario no es un número válido.");
        } catch (SQLException e) {
            System.out.println("Error: " + e);
        }
        return false;
    }

    public ResultSet consulta(String sql) {
        rs = null;
        try {
            conex = Conexion.getConexion();
            ps = conex.prepareStatement(sql);
            rs = ps.executeQuery();
        } catch (SQLException e) {
            System.out.println("Error " + e);
        }
        return rs;
    }

    public DefaultComboBoxModel Obt_IdUsuario() {
        DefaultComboBoxModel ListaModelo = new DefaultComboBoxModel();
        ListaModelo.addElement("Seleccionar");
        rs = this.consulta("""
                           SELECT IdUsuario
                           FROM usuario
                           WHERE IdUsuario NOT IN (
                               SELECT IdUsuario
                               FROM vendedor
                               UNION
                               SELECT IdUsuario
                               FROM administrador
                           );""");
        try {
            while (rs.next()) {
                ListaModelo.addElement(rs.getString("IdUsuario"));
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println("Error " + e);
        }
        return ListaModelo;
    }

    public boolean verificarIDUsuario(String idUsuario) {
        String SQL = "SELECT idUsuario FROM usuario WHERE idUsuario = ?";
        try (Connection conex = Conexion.getConexion(); PreparedStatement ps = conex.prepareStatement(SQL)) {

            ps.setString(1, idUsuario);
            try (ResultSet rs = ps.executeQuery()) {
                return rs.next();
            }
        } catch (SQLException e) {
            throw new RuntimeException("Error al verificar el ID de usuario", e);
        }
    }

    void ActualizarVendedor() throws SQLException {
        modelo = (DefaultTableModel) tblVendedor.getModel();

        int selectedRow = tblVendedor.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "SELECCIONE UNA FILA");
        } else {
            String nom = txtNombreVendedor.getText();
            String apell = txtApellidoVendedor.getText();
            String tel = txtTeléfonoVendedor.getText();
            String dni1 = txtDniVendedor.getText();
            String idUser = (String) cbxIdUsuario.getSelectedItem();

            if (!nom.isEmpty() && !apell.isEmpty() && !tel.isEmpty() && !dni1.isEmpty() && !idUser.isEmpty()) {

                int idVende = (int) tblVendedor.getValueAt(selectedRow, 0);

                int t = Integer.parseInt(tel);
                int d = Integer.parseInt(dni1);
                int idnew = Integer.parseInt(idUser);

                if (!txtNombreVendedor.getText().trim().isEmpty() || esIdUsuarioDisponible(idUser)) {
                    v.setNombre(nom);
                    v.setApellido(apell);
                    v.setTelefono(t);
                    v.setDNI(d);
                    v.setIdUsuario(idnew);
                    v.setIdVendedor(idVende);

                    vende.update(v);

                    this.cbxIdUsuario.setModel(Obt_IdUsuario());
                    JOptionPane.showMessageDialog(null, "USUARIO MODIFICADO");
                    LimpiarTabla();
                    ListarVendedor();
                    LimpiarVendedor();
                } else {
                    JOptionPane.showMessageDialog(null, "ID DE USUARIO ELEGIDO YA ESTA ASIGNADO A UN VENDEDOR");

                }

            } else {
                JOptionPane.showMessageDialog(null, "LOS CAMPOS ESTAN VACIOS");
            }
        }
    }

    void ObtenerDatosTabla() {
        modelo = (DefaultTableModel) tblVendedor.getModel();

        int selectedRow = tblVendedor.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila de la tabla.");
        } else {
            String nombre = modelo.getValueAt(selectedRow, 1).toString();
            String apellido = modelo.getValueAt(selectedRow, 2).toString();
            String telefono = modelo.getValueAt(selectedRow, 3).toString();
            String dni = modelo.getValueAt(selectedRow, 4).toString();
            String idUsuario = modelo.getValueAt(selectedRow, 5).toString();

            txtNombreVendedor.setText(nombre);
            txtApellidoVendedor.setText(apellido);
            txtTeléfonoVendedor.setText(telefono);
            txtDniVendedor.setText(dni);
            cbxIdUsuario.setSelectedItem(idUsuario);
        }
    }

    void EliminarVendedor() {
        modelo = (DefaultTableModel) tblVendedor.getModel();
        int selectedRow = tblVendedor.getSelectedRow();

        if (selectedRow != -1) {
            int pregunta = JOptionPane.showConfirmDialog(null, "¿ESTAS SEGURO DE ELIMINAR?");
            if (pregunta == JOptionPane.YES_OPTION) {
                int idVende = (int) tblVendedor.getValueAt(selectedRow, 0);
                vende.delete(idVende);
                LimpiarTabla();
                ListarVendedor();
                LimpiarVendedor();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona una fila");
        }
    }

    void LimpiarTabla() {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    void ListarVendedor() {
        DefaultTableModel modelo = (DefaultTableModel) tblVendedor.getModel();
        modelo.setRowCount(0);
        modelo.setColumnCount(0);

        modelo.setColumnIdentifiers(new Object[]{"ID VENDEDOR", "Nombre", "Apellido", "Contacto", "DNI", "ID USUARIO"});

        List<Vendedor> listar = vende.readAll();
        for (Vendedor vendedor : listar) {
            Object[] ob = new Object[6];
            ob[0] = vendedor.getIdVendedor();
            ob[1] = vendedor.getNombre();
            ob[2] = vendedor.getApellido();
            ob[3] = vendedor.getTelefono();
            ob[4] = vendedor.getDNI();
            ob[5] = vendedor.getIdUsuario();
            modelo.addRow(ob);
        }
    }

    void LimpiarVendedor() {
        txtNombreVendedor.setText("");
        txtApellidoVendedor.setText("");
        txtTeléfonoVendedor.setText("");
        txtDniVendedor.setText("");
        cbxIdUsuario.setSelectedItem("Seleccionar");
        tblVendedor.clearSelection();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendedoresJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendedoresJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendedoresJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendedoresJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendedoresJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarAdmin;
    private javax.swing.JButton btnEliminarAdmin;
    private javax.swing.JButton btnGuardarAdmin;
    private javax.swing.JButton btnListarDisponible;
    private javax.swing.JButton btnNuevoAdmin;
    private javax.swing.JButton btnSalirAdmin;
    private javax.swing.JComboBox<String> cbxIdUsuario;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblVendedor;
    private javax.swing.JTextField txtApellidoVendedor;
    private javax.swing.JTextField txtDniVendedor;
    private javax.swing.JTextField txtNombreVendedor;
    private javax.swing.JTextField txtTeléfonoVendedor;
    // End of variables declaration//GEN-END:variables

class FondoPanel extends JPanel {
        private Image imagen;

        public FondoPanel() {
            // Cargar la imagen en el constructor del panel
            URL imageURL = getClass().getResource("/pe/edu/utp/sistemaropa/img/fondorosa.png");
            if (imageURL != null) {
                imagen = new ImageIcon(imageURL).getImage();
            } else {
                System.err.println("La imagen no se encuentra en la ruta especificada.");
            }
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            if (imagen != null) {
                g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            }
        }
    }
}
